#!/bin/bash

if [ -t 1 ]
then
	red="\033[0;31m"
	green="\033[0;32m"
	yellow="\033[0;33m"
	blue="\033[1;36m"
	nocolor="\033[0m"
fi

# Check the testable directory is passed
if [ $# -ge 1 ]
then
	testdir=$1
else
	testdir=.
fi

echo -en "${blue}"
echo "+---------------------------------------------------------------------------+";
echo "| █████ █████   ████████     ███████████ ██████████ █████  █████  █████████ |";
echo "|░░███ ░░███   ███░░░░███   ░█░░░░░░███ ░░███░░░░░█░░███  ░░███  ███░░░░░███|";
echo "| ░███  ░███ █░░░    ░███   ░     ███░   ░███  █ ░  ░███   ░███ ░███    ░░░ |";
echo "| ░███████████   ███████         ███     ░██████    ░███   ░███ ░░█████████ |";
echo "| ░░░░░░░███░█  ███░░░░         ███      ░███░░█    ░███   ░███  ░░░░░░░░███|";
echo "|       ░███░  ███      █     ████     █ ░███ ░   █ ░███   ░███  ███    ░███|";
echo "|       █████ ░██████████    ███████████ ██████████ ░░████████  ░░█████████ |";
echo "|      ░░░░░  ░░░░░░░░░░    ░░░░░░░░░░░ ░░░░░░░░░░   ░░░░░░░░    ░░░░░░░░░  |";
echo "+---------------------------------------------------------------------------+";
echo -en "${nocolor}"

version=$(cat $(dirname $0)/version.txt)

echo -e "${green}Version ${version}${nocolor}"

if [ $testdir == "--update" ]
then
	echo -e "${green}Attempting to update...${nocolor}"
	cd $(dirname $0)
	git checkout master --quiet
	git pull --quiet
	if [ $? -ne 0 ]
	then
		echo -e "${red}Could not successfully update; consider deleting directory ~/.42zeus and reinstalling${nocolor}"
		exit 1
	else
		newversion=$(cat $(dirname $0)/version.txt)
		if [ "$newversion" != "$version" ]
		then
			echo -e "${green}Successfully updated to version $(cat $(dirname $0)/version.txt)!${nocolor}"
		else
			echo -e "${yellow}No updates found for version $version${nocolor}"
		fi
		exit 0
	fi
fi

latestversion=$(curl -s https://raw.githubusercontent.com/ander-vieira/42zeus/refs/heads/master/version.txt)
if [ $? -eq 0 -a "$latestversion" != "$version" ]
then
	echo -e "${yellow}New version ${latestversion} is available; to update, run \"zeus --update\"${nocolor}"
fi

if [ ! -d $testdir ]
then
	echo -e "${red}$testdir does not exist or is not a directory${nocolor}"
	exit 1
fi

echo -e "${green}Running on directory $testdir${nocolor}"

# Copy the testable directory into Zeus's local files
cp -R "$testdir" $(dirname $0)/repo/

cd $(dirname $0)

project=$(tools/detectproject)

if [ $project != none ]
then
	echo -e "${green}Detected project $project!${nocolor}"
	$project/tester
	status=$?
	rm -rf repo/
	exit $status
else
	echo -e "${red}Couldn't automatically detect project, stopping...${nocolor}"
	rm -rf repo/
	exit 1
fi